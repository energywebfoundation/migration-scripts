{
  "contractName": "DNSRegistrar",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract DNSSEC",
          "name": "_dnssec",
          "type": "address"
        },
        {
          "internalType": "contract ENS",
          "name": "_ens",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dnsname",
          "type": "bytes"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ens",
      "outputs": [
        {
          "internalType": "contract ENS",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract DNSSEC",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "name",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "name",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "proveAndClaim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract DNSSEC\",\"name\":\"_dnssec\",\"type\":\"address\"},{\"internalType\":\"contract ENS\",\"name\":\"_ens\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dnsname\",\"type\":\"bytes\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract DNSSEC\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"proveAndClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An ENS registrar that allows the owner of a DNS name to claim the     corresponding name in ENS.\",\"methods\":{\"claim(bytes,bytes)\":{\"details\":\"Claims a name by proving ownership of its DNS equivalent.\",\"params\":{\"name\":\"The name to claim, in DNS wire format.\",\"proof\":\"A DNS RRSet proving ownership of the name. Must be verified       in the DNSSEC oracle before calling. This RRSET must contain a TXT       record for '_ens.' + name, with the value 'a=0x...'. Ownership of       the name will be transferred to the address specified in the TXT       record.\"}},\"proveAndClaim(bytes,bytes,bytes)\":{\"details\":\"Submits proofs to the DNSSEC oracle, then claims a name using those proofs.\",\"params\":{\"input\":\"The data to be passed to the Oracle's `submitProofs` function. The last       proof must be the TXT record required by the registrar.\",\"name\":\"The name to claim, in DNS wire format.\",\"proof\":\"The proof record for the first element in input.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@ensdomains/dnsregistrar/contracts/DNSRegistrar.sol\":\"DNSRegistrar\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/buffer/contracts/Buffer.sol\":{\"keccak256\":\"0x1264adbd06f6e05b04539bb225063a988b7fa90343d068de60cdde6cfb6fa92d\",\"urls\":[\"bzz-raw://9362e5c8306c61ad32144028b5b6c3a90ff868c86e814d26f096a59243598ed2\",\"dweb:/ipfs/QmQPRLNQu1iN6KHKPbhkGvRZnsKgjddjzEza8Q8oJ5FfwH\"]},\"@ensdomains/dnsregistrar/contracts/DNSClaimChecker.sol\":{\"keccak256\":\"0x5fc9b4106d191c2d83aacd2fc8442ccc9c375af74cb8839c02aeb53a4ca47679\",\"urls\":[\"bzz-raw://55797d4d383728155b0fa55a8ec036db45eb068c17df944629cece6dc9039583\",\"dweb:/ipfs/QmUTm3A9yWvV9zJaFcvXvgaCtw6VhiqW2Rf313JTVQLwpD\"]},\"@ensdomains/dnsregistrar/contracts/DNSRegistrar.sol\":{\"keccak256\":\"0xdfe260431a1739b841d8c3647f6a194cc4bab7b9cdd392873bd5e98a096a539f\",\"urls\":[\"bzz-raw://c28d89a90a174093a25b210613b62214098a512fc69fa491d27508aa3068398d\",\"dweb:/ipfs/QmZcmL5SDsNetXYHwdYBWZ1cxPSaKPHVVD5sT5GW7nZy1i\"]},\"@ensdomains/dnssec-oracle/contracts/BytesUtils.sol\":{\"keccak256\":\"0x4014e689ef4a36cbf7103d88286abd2a7c560c2a7af99a561c33c61bc78be27a\",\"urls\":[\"bzz-raw://65e6c215e270ca999089bafa672420a7ef03e9f511dedf6aa4e68857f7dff0fe\",\"dweb:/ipfs/QmQVArMTrJwx6xH49mUMCrr6Jdq6ym6f4zRPPpk7y1jK6J\"]},\"@ensdomains/dnssec-oracle/contracts/DNSSEC.sol\":{\"keccak256\":\"0x76919cd8a0abc40d556b93540216ea2b4c92a2b3c2a5476c92c7cf246c6d9e79\",\"urls\":[\"bzz-raw://af43a3caec7ec3afe38c06dc4cdefaa4aed2e0b7711d851b01661c63bc848856\",\"dweb:/ipfs/QmYvmzXZnxoXjbybSvwexF8wZwLceJy7E6vAoHZv5LREtj\"]},\"@ensdomains/dnssec-oracle/contracts/RRUtils.sol\":{\"keccak256\":\"0x5135591043cf38413b19f93d16f189f0f8b50b01b78642fb764635d9790cc7ca\",\"urls\":[\"bzz-raw://22e073044ad4ebc936866bb29f6bb38184a454038d63f7f7d2f63a57603ffc86\",\"dweb:/ipfs/QmUugBcgtVUUafeK1NBN4vcVmPboZLK18Lc5zVXhZ8nuZh\"]},\"@ensdomains/ens/contracts/ENS.sol\":{\"keccak256\":\"0x10b88673d8c180cd62523be4fec7607c65594eb4f0c561fa0fbc0784422b4871\",\"urls\":[\"bzz-raw://b3de1882a4a1a1b13c27ee6dc04cc58c34ac392c80cad507de2cdfa8c02712fe\",\"dweb:/ipfs/QmeKcaBF8QdJjXiqFrPJkAtK3et5kUL8XJrnHjwhAThRMT\"]},\"@ensdomains/ens/contracts/ENSRegistry.sol\":{\"keccak256\":\"0xa40b635d209272928968c804b0a8ee390d599e84100b491c9ad38e86b841fed8\",\"urls\":[\"bzz-raw://8bb61b4f5773f6ddd5e4abde74f08127b86a6bc07466cbfba119760bcfb9aa59\",\"dweb:/ipfs/QmRckNAmD2gqVSocvBbLPNDhMrFgHdRaErR7MnY7TLr7Yx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516115ce3803806115ce8339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506114ee806100e06000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c5780633f15457f146100c15780637dc0d1d01461010b578063be27b22c14610155578063d94585bd146102a7575b600080fd5b6100a76004803603602081101561007257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b6100c96105fa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610113610620565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a56004803603604081101561016b57600080fd5b810190808035906020019064010000000081111561018857600080fd5b82018360208201111561019a57600080fd5b803590602001918460018302840111640100000000831117156101bc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561021f57600080fd5b82018360208201111561023157600080fd5b8035906020019184600183028401116401000000008311171561025357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610645565b005b61048e600480360360608110156102bd57600080fd5b81019080803590602001906401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561037157600080fd5b82018360208201111561038357600080fd5b803590602001918460018302840111640100000000831117156103a557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561040857600080fd5b82018360208201111561041a57600080fd5b8035906020019184600183028401116401000000008311171561043c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610862565b005b600060405180807f737570706f727473496e74657266616365286279746573342900000000000000815250601901905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105f3575060405180807f6f7261636c6528290000000000000000000000000000000000000000000000008152506008019050604051809103902060405180807f70726f7665416e64436c61696d2862797465732c62797465732c6279746573298152506020019050604051809103902060405180807f636c61696d2862797465732c62797465732900000000000000000000000000008152506012019050604051809103902018187bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006106736000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484610ab2565b508091505060008061068485610dc7565b8092508193505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59238284866040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050602060405180830381600087803b15801561073d57600080fd5b505af1158015610751573d6000803e3d6000fd5b505050506040513d602081101561076757600080fd5b8101908080519060200190929190505050508273ffffffffffffffffffffffffffffffffffffffff1681836040516020018083815260200182815260200192505050604051602081830303815290604052805190602001207fa2e66ce20e6fb2c4f61339c364ad79f15160cf5307230c8bc4d628adbca2ba39876040518080602001828103825283818151815260200191508051906020019080838360005b83811015610821578082015181840152602081019050610806565b50505050905090810190601f16801561084e5780820380516001836020036101000a031916815260200191505b509250505060405180910390a35050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166376a14d1d83836040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019080838360005b838110156108f45780820151818401526020810190506108d9565b50505050905090810190601f1680156109215780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561095a57808201518184015260208101905061093f565b50505050905090810190601f1680156109875780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156109a857600080fd5b505af11580156109bc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156109e657600080fd5b8101908080516040519392919084640100000000821115610a0657600080fd5b83820191506020820185811115610a1c57600080fd5b8251866001820283011164010000000082111715610a3957600080fd5b8083526020830192505050908051906020019080838360005b83811015610a6d578082015181840152602081019050610a52565b50505050905090810190601f168015610a9a5780820380516001836020036101000a031916815260200191505b506040525050509050610aad8382610645565b505050565b600080610abd611418565b610ad4600586510182610e9390919063ffffffff16565b50610b1d6040518060400160405280600581526020017f045f656e7300000000000000000000000000000000000000000000000000000081525082610ee790919063ffffffff16565b50610b318582610ee790919063ffffffff16565b506000808773ffffffffffffffffffffffffffffffffffffffff1663087991bc601085600001516040518363ffffffff1660e01b8152600401808361ffff1661ffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610bb5578082015181840152602081019050610b9a565b50505050905090810190601f168015610be25780820380516001836020036101000a031916815260200191505b50935050505060606040518083038186803b158015610c0057600080fd5b505afa158015610c14573d6000803e3d6000fd5b505050506040513d6060811015610c2a57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509091508093508192505050600060601b6bffffffffffffffffffffffff1916826bffffffffffffffffffffffff1916148015610c8c575060008651145b15610ca35760008081915094509450505050610dbf565b85805190602001206bffffffffffffffffffffffff1916826bffffffffffffffffffffffff191614610cd457600080fd5b610cdc611432565b610cf0600088610f0990919063ffffffff16565b90505b610cfc81610f33565b610db05742816080015163ffffffff16830167ffffffffffffffff161015610d6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c81526020018061147e603c913960400191505060405180910390fd5b600080610d80898460a00151610f49565b80935081925050508115610da05780600197509750505050505050610dbf565b5050610dab81610fc0565b610cf3565b50600080819150945094505050505b935093915050565b6000806000610de06000856110d490919063ffffffff16565b60ff1690506000610dfd60018301866110d490919063ffffffff16565b60ff1690506000610e1c600283850101876110d490919063ffffffff16565b60ff1614610e2957600080fd5b610e3f600183876110f89092919063ffffffff16565b6000801b610e5b8460020184896110f89092919063ffffffff16565b604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120935093505050915091565b610e9b611418565b600060208381610ea757fe5b0614610ec05760208281610eb757fe5b06602003820191505b81836020018181525050604051808452600081528281016020016040525082905092915050565b610eef611418565b610f018384600001515184855161111b565b905092915050565b610f11611432565b828160000181905250818160c0018181525050610f2d81610fc0565b92915050565b6000816000015151826020015110159050919050565b6000805b8351831015610fae576000610f6b84866110d490919063ffffffff16565b60ff169050600184019350600080610f848787856111d4565b80935081925050508115610fa15780600194509450505050610fb9565b8286019550505050610f4d565b600080819150915091505b9250929050565b8060c00151816020018181525050806000015151816020015110610fe3576110d1565b6000610ff78260000151836020015161123b565b826020015101905061101681836000015161129690919063ffffffff16565b826040019061ffff16908161ffff168152505060028101905061104681836000015161129690919063ffffffff16565b826060019061ffff16908161ffff16815250506002810190506110768183600001516112bc90919063ffffffff16565b826080019063ffffffff16908163ffffffff168152505060048101905060006110ac82846000015161129690919063ffffffff16565b61ffff169050600282019150818360a00181815250508082018360c001818152505050505b50565b60008282815181106110e257fe5b602001015160f81c60f81b60f81c905092915050565b60008351828401111561110a57600080fd5b818360208601012090509392505050565b611123611418565b825182111561113157600080fd5b8460200151828501111561115c5761115b85600261115588602001518887016112e4565b02611300565b5b60008086518051876020830101935080888701111561117b5787860182525b60208701925050505b602084106111a75780518252602082019150602081019050602084039350611184565b60006001856020036101000a03905080198251168184511681811785525050879350505050949350505050565b60008063613d30786111ef85876112bc90919063ffffffff16565b63ffffffff16146112095760008081915091509150611233565b602c8310156112215760008081915091509150611233565b61122e8560048601611324565b915091505b935093915050565b6000808290505b60011561128a578351811061125357fe5b600061126882866110d490919063ffffffff16565b60ff16905060018101820191506000811415611284575061128a565b50611242565b82810391505092915050565b600082516002830111156112a957600080fd5b61ffff8260028501015116905092915050565b600082516004830111156112cf57600080fd5b63ffffffff8260048501015116905092915050565b6000818311156112f6578290506112fa565b8190505b92915050565b6060826000015190506113138383610e93565b5061131e8382610ee7565b50505050565b60008060288385510310156113425760008081915091509150611411565b600080905060008490505b6028850181101561140457600482901b9150600061137482886110d490919063ffffffff16565b60ff1690506030811015801561138a5750603a81105b1561139c5760308103831792506113f6565b604181101580156113ad5750604781105b156113bf5760378103831792506113f5565b606181101580156113d05750606781105b156113e25760578103831792506113f4565b60008081915094509450505050611411565b5b5b50808060010191505061134d565b5080600181915092509250505b9250929050565b604051806040016040528060608152602001600081525090565b6040518060e001604052806060815260200160008152602001600061ffff168152602001600061ffff168152602001600063ffffffff1681526020016000815260200160008152509056fe444e53207265636f7264206973207374616c653b2072656672657368206f722064656c657465206974206265666f72652070726f63656564696e672ea265627a7a72315820d76dc26a3cdd3b49801c7ef99757cc79e7e6156f3d53b70380459ea54cae68aa64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c5780633f15457f146100c15780637dc0d1d01461010b578063be27b22c14610155578063d94585bd146102a7575b600080fd5b6100a76004803603602081101561007257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b6100c96105fa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610113610620565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a56004803603604081101561016b57600080fd5b810190808035906020019064010000000081111561018857600080fd5b82018360208201111561019a57600080fd5b803590602001918460018302840111640100000000831117156101bc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561021f57600080fd5b82018360208201111561023157600080fd5b8035906020019184600183028401116401000000008311171561025357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610645565b005b61048e600480360360608110156102bd57600080fd5b81019080803590602001906401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561037157600080fd5b82018360208201111561038357600080fd5b803590602001918460018302840111640100000000831117156103a557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561040857600080fd5b82018360208201111561041a57600080fd5b8035906020019184600183028401116401000000008311171561043c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610862565b005b600060405180807f737570706f727473496e74657266616365286279746573342900000000000000815250601901905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105f3575060405180807f6f7261636c6528290000000000000000000000000000000000000000000000008152506008019050604051809103902060405180807f70726f7665416e64436c61696d2862797465732c62797465732c6279746573298152506020019050604051809103902060405180807f636c61696d2862797465732c62797465732900000000000000000000000000008152506012019050604051809103902018187bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006106736000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484610ab2565b508091505060008061068485610dc7565b8092508193505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59238284866040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050602060405180830381600087803b15801561073d57600080fd5b505af1158015610751573d6000803e3d6000fd5b505050506040513d602081101561076757600080fd5b8101908080519060200190929190505050508273ffffffffffffffffffffffffffffffffffffffff1681836040516020018083815260200182815260200192505050604051602081830303815290604052805190602001207fa2e66ce20e6fb2c4f61339c364ad79f15160cf5307230c8bc4d628adbca2ba39876040518080602001828103825283818151815260200191508051906020019080838360005b83811015610821578082015181840152602081019050610806565b50505050905090810190601f16801561084e5780820380516001836020036101000a031916815260200191505b509250505060405180910390a35050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166376a14d1d83836040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019080838360005b838110156108f45780820151818401526020810190506108d9565b50505050905090810190601f1680156109215780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561095a57808201518184015260208101905061093f565b50505050905090810190601f1680156109875780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156109a857600080fd5b505af11580156109bc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156109e657600080fd5b8101908080516040519392919084640100000000821115610a0657600080fd5b83820191506020820185811115610a1c57600080fd5b8251866001820283011164010000000082111715610a3957600080fd5b8083526020830192505050908051906020019080838360005b83811015610a6d578082015181840152602081019050610a52565b50505050905090810190601f168015610a9a5780820380516001836020036101000a031916815260200191505b506040525050509050610aad8382610645565b505050565b600080610abd611418565b610ad4600586510182610e9390919063ffffffff16565b50610b1d6040518060400160405280600581526020017f045f656e7300000000000000000000000000000000000000000000000000000081525082610ee790919063ffffffff16565b50610b318582610ee790919063ffffffff16565b506000808773ffffffffffffffffffffffffffffffffffffffff1663087991bc601085600001516040518363ffffffff1660e01b8152600401808361ffff1661ffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610bb5578082015181840152602081019050610b9a565b50505050905090810190601f168015610be25780820380516001836020036101000a031916815260200191505b50935050505060606040518083038186803b158015610c0057600080fd5b505afa158015610c14573d6000803e3d6000fd5b505050506040513d6060811015610c2a57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509091508093508192505050600060601b6bffffffffffffffffffffffff1916826bffffffffffffffffffffffff1916148015610c8c575060008651145b15610ca35760008081915094509450505050610dbf565b85805190602001206bffffffffffffffffffffffff1916826bffffffffffffffffffffffff191614610cd457600080fd5b610cdc611432565b610cf0600088610f0990919063ffffffff16565b90505b610cfc81610f33565b610db05742816080015163ffffffff16830167ffffffffffffffff161015610d6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c81526020018061147e603c913960400191505060405180910390fd5b600080610d80898460a00151610f49565b80935081925050508115610da05780600197509750505050505050610dbf565b5050610dab81610fc0565b610cf3565b50600080819150945094505050505b935093915050565b6000806000610de06000856110d490919063ffffffff16565b60ff1690506000610dfd60018301866110d490919063ffffffff16565b60ff1690506000610e1c600283850101876110d490919063ffffffff16565b60ff1614610e2957600080fd5b610e3f600183876110f89092919063ffffffff16565b6000801b610e5b8460020184896110f89092919063ffffffff16565b604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120935093505050915091565b610e9b611418565b600060208381610ea757fe5b0614610ec05760208281610eb757fe5b06602003820191505b81836020018181525050604051808452600081528281016020016040525082905092915050565b610eef611418565b610f018384600001515184855161111b565b905092915050565b610f11611432565b828160000181905250818160c0018181525050610f2d81610fc0565b92915050565b6000816000015151826020015110159050919050565b6000805b8351831015610fae576000610f6b84866110d490919063ffffffff16565b60ff169050600184019350600080610f848787856111d4565b80935081925050508115610fa15780600194509450505050610fb9565b8286019550505050610f4d565b600080819150915091505b9250929050565b8060c00151816020018181525050806000015151816020015110610fe3576110d1565b6000610ff78260000151836020015161123b565b826020015101905061101681836000015161129690919063ffffffff16565b826040019061ffff16908161ffff168152505060028101905061104681836000015161129690919063ffffffff16565b826060019061ffff16908161ffff16815250506002810190506110768183600001516112bc90919063ffffffff16565b826080019063ffffffff16908163ffffffff168152505060048101905060006110ac82846000015161129690919063ffffffff16565b61ffff169050600282019150818360a00181815250508082018360c001818152505050505b50565b60008282815181106110e257fe5b602001015160f81c60f81b60f81c905092915050565b60008351828401111561110a57600080fd5b818360208601012090509392505050565b611123611418565b825182111561113157600080fd5b8460200151828501111561115c5761115b85600261115588602001518887016112e4565b02611300565b5b60008086518051876020830101935080888701111561117b5787860182525b60208701925050505b602084106111a75780518252602082019150602081019050602084039350611184565b60006001856020036101000a03905080198251168184511681811785525050879350505050949350505050565b60008063613d30786111ef85876112bc90919063ffffffff16565b63ffffffff16146112095760008081915091509150611233565b602c8310156112215760008081915091509150611233565b61122e8560048601611324565b915091505b935093915050565b6000808290505b60011561128a578351811061125357fe5b600061126882866110d490919063ffffffff16565b60ff16905060018101820191506000811415611284575061128a565b50611242565b82810391505092915050565b600082516002830111156112a957600080fd5b61ffff8260028501015116905092915050565b600082516004830111156112cf57600080fd5b63ffffffff8260048501015116905092915050565b6000818311156112f6578290506112fa565b8190505b92915050565b6060826000015190506113138383610e93565b5061131e8382610ee7565b50505050565b60008060288385510310156113425760008081915091509150611411565b600080905060008490505b6028850181101561140457600482901b9150600061137482886110d490919063ffffffff16565b60ff1690506030811015801561138a5750603a81105b1561139c5760308103831792506113f6565b604181101580156113ad5750604781105b156113bf5760378103831792506113f5565b606181101580156113d05750606781105b156113e25760578103831792506113f4565b60008081915094509450505050611411565b5b5b50808060010191505061134d565b5080600181915092509250505b9250929050565b604051806040016040528060608152602001600081525090565b6040518060e001604052806060815260200160008152602001600061ffff168152602001600061ffff168152602001600063ffffffff1681526020016000815260200160008152509056fe444e53207265636f7264206973207374616c653b2072656672657368206f722064656c657465206974206265666f72652070726f63656564696e672ea265627a7a72315820d76dc26a3cdd3b49801c7ef99757cc79e7e6156f3d53b70380459ea54cae68aa64736f6c63430005100032",
  "sourceMap": "284:2213:7:-;;;724:98;8:9:-1;5:2;;;30:1;27;20:12;5:2;724:98:7;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;724:98:7;;;;;;;;;;;;;;;;;;;;;;;;;788:7;779:6;;:16;;;;;;;;;;;;;;;;;;811:4;805:3;;:10;;;;;;;;;;;;;;;;;;724:98;;284:2213;;;;;;",
  "deployedSourceMap": "284:2213:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:2213:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2314:181;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2314:181:7;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;339:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;313:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1314:420;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1314:420:7;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1314:420:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1314:420:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1314:420:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1314:420:7;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1314:420:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1314:420:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1314:420:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1314:420:7;;;;;;;;;;;;;;;:::i;:::-;;2133:175;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2133:175:7;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2133:175:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2133:175:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2133:175:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2133:175:7;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2133:175:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2133:175:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2133:175:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2133:175:7;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2133:175:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2133:175:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2133:175:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2133:175:7;;;;;;;;;;;;;;;:::i;:::-;;2314:181;2384:4;411:38;;;;;;;;;;;;;;;;;;;2407:32;;;:11;:32;;;;:81;;;;612:21;;;;;;;;;;;;;;;;;;;556:45;;;;;;;;;;;;;;;;;;;514:31;;;;;;;;;;;;;;;;;;;:87;:119;2458:30;;;:11;:30;;;;2407:81;2400:88;;2314:181;;;:::o;339:14::-;;;;;;;;;;;;;:::o;313:20::-;;;;;;;;;;;;;:::o;1314:420::-;1385:12;1417:52;1449:6;;;;;;;;;;;1457:4;1463:5;1417:31;:52::i;:::-;1407:62;;;;;1480:17;1507:16;1557:31;1583:4;1557:25;:31::i;:::-;1533:55;;;;;;;;1599:3;;;;;;;;;;;:19;;;1619:8;1629:9;1640:4;1599:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1599:46:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1599:46:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1599:46:7;;;;;;;;;;;;;;;;;1716:4;1660:67;;1693:8;1703:9;1676:37;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1676:37:7;;;1666:48;;;;;;1660:67;1722:4;1660:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1660:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1314:420;;;;;:::o;2133:175::-;2240:6;;;;;;;;;;;:19;;;2260:5;2267;2240:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2240:33:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2240:33:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2240:33:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2240:33:7;;;;;;39:16:-1;36:1;17:17;2:54;2240:33:7;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2240:33:7;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;2240:33:7;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2240:33:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2232:41;;2283:18;2289:4;2295:5;2283;:18::i;:::-;2133:175;;;:::o;793:1096:6:-;919:7;928:4;997:24;;:::i;:::-;1031:25;1054:1;1040:4;:11;:15;1031:3;:8;;:25;;;;:::i;:::-;;1066:22;;;;;;;;;;;;;;;;;;:3;:10;;:22;;;;:::i;:::-;;1098:16;1109:4;1098:3;:10;;:16;;;;:::i;:::-;;1124:12;1146:15;1266:6;:13;;;440:2;1290:3;:7;;;1266:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1266:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1266:32:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1266:32:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1266:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1245:53;;;;;;;;;;;1328:1;1320:10;;1312:18;;;:4;:18;;;;:39;;;;;1350:1;1334:5;:12;:17;1312:39;1308:73;;;1369:3;1375:5;1353:28;;;;;;;;;;;;1308:73;1426:5;1416:16;;;;;;1400:33;;;:4;:33;;;;1392:42;;;;;;1450:30;;:::i;:::-;1483:19;1500:1;1483:5;:16;;:19;;;;:::i;:::-;1450:52;;1445:399;1505:11;:4;:9;:11::i;:::-;1445:399;;1576:3;1564:4;:8;;;1553:19;;:8;:19;:26;;;;1545:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1659:10;1683:12;1725:32;1733:5;1740:4;:16;;;1725:7;:32::i;:::-;1709:48;;;;;;;;1775:5;1771:63;;;1808:4;1814;1800:19;;;;;;;;;;;;1771:63;1445:399;;1518:11;:4;:9;:11::i;:::-;1445:399;;;;1870:3;1876:5;1854:28;;;;;;;;;;793:1096;;;;;;;:::o;449:338::-;510:7;519;538:8;549:17;564:1;549:4;:14;;:17;;;;:::i;:::-;538:28;;;;576:11;590:23;611:1;605:3;:7;590:4;:14;;:23;;;;:::i;:::-;576:37;;;;668:1;632:32;662:1;653:6;647:3;:12;:16;632:4;:14;;:32;;;;:::i;:::-;:37;;;624:46;;;;;;689:19;701:1;704:3;689:4;:11;;:19;;;;;:::i;:::-;745:1;737:10;;749:28;765:3;761:1;:7;770:6;749:4;:11;;:28;;;;;:::i;:::-;720:58;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;720:58:6;;;710:69;;;;;;681:99;;;;;;449:338;;;:::o;978:455:5:-;1048:13;;:::i;:::-;1094:1;1088:2;1077:8;:13;;;;;;:18;1073:81;;1140:2;1129:8;:13;;;;;;1123:2;:20;1111:32;;;;1073:81;1224:8;1209:3;:12;;:23;;;;;1282:4;1276:11;1312:3;1307;1300:16;1341:1;1336:3;1329:14;1386:8;1381:3;1377:18;1373:2;1369:27;1363:4;1356:41;1251:156;1423:3;1416:10;;978:455;;;;:::o;4946:161::-;5023:13;;:::i;:::-;5055:45;5061:3;5066;:7;;;:14;5082:4;5088;:11;5055:5;:45::i;:::-;5048:52;;4946:161;;;;:::o;2435:182:10:-;2510:21;;:::i;:::-;2554:4;2543:3;:8;;:15;;;;2585:6;2568:3;:14;;:23;;;;;2601:9;2606:3;2601:4;:9::i;:::-;2435:182;;;;:::o;2788:121::-;2848:4;2886;:9;;;:16;2871:4;:11;;;:31;;2864:38;;2788:121;;;:::o;1895:411:6:-;1965:7;1974:4;1990:271;2003:5;:12;1997:3;:18;1990:271;;;2031:8;2042:20;2058:3;2042:5;:15;;:20;;;;:::i;:::-;2031:31;;;;2071:1;2064:8;;;;2087:10;2111:12;2153:28;2165:5;2172:3;2177;2153:11;:28::i;:::-;2137:44;;;;;;;;2200:5;2196:30;;;2215:4;2221;2207:19;;;;;;;;;2196:30;2247:3;2240:10;;;;1990:271;;;;;;2287:3;2293:5;2271:28;;;;;;;1895:411;;;;;;:::o;3032:682:10:-;3108:4;:15;;;3094:4;:11;;:29;;;;;3152:4;:9;;;:16;3137:4;:11;;;:31;3133:68;;3184:7;;3133:68;3236:8;3261:34;3272:4;:9;;;3283:4;:11;;;3261:10;:34::i;:::-;3247:4;:11;;;:48;3236:59;;3358:25;3379:3;3358:4;:9;;;:20;;:25;;;;:::i;:::-;3343:4;:12;;:40;;;;;;;;;;;3400:1;3393:8;;;;3424:25;3445:3;3424:4;:9;;;:20;;:25;;;;:::i;:::-;3411:4;:10;;:38;;;;;;;;;;;3466:1;3459:8;;;;3488:25;3509:3;3488:4;:9;;;:20;;:25;;;;:::i;:::-;3477:4;:8;;:36;;;;;;;;;;;3530:1;3523:8;;;;3568:16;3587:25;3608:3;3587:4;:9;;;:20;;:25;;;;:::i;:::-;3568:44;;;;3629:1;3622:8;;;;3659:3;3640:4;:16;;:22;;;;;3696:11;3690:3;:17;3672:4;:15;;:35;;;;;3032:682;;;;:::o;5331:122:8:-;5402:9;5436:4;5441:3;5436:9;;;;;;;;;;;;;;;;5430:16;;5423:23;;5331:122;;;;:::o;306:238::-;387:11;434:4;:11;427:3;418:6;:12;:27;;410:36;;;;;;524:3;515:6;510:2;504:4;500:13;496:26;486:42;479:49;;465:73;;;;;:::o;2875:1326:5:-;2970:13;;:::i;:::-;3010:4;:11;3003:3;:18;;2995:27;;;;;;3049:3;:12;;;3043:3;3037;:9;:24;3033:100;;;3077:45;3084:3;3120:1;3089:28;3093:3;:12;;;3113:3;3107;:9;3089:3;:28::i;:::-;:32;3077:6;:45::i;:::-;3033:100;3143:9;3162:8;3272:3;3266:10;3355:6;3349:13;3483:3;3478:2;3470:6;3466:15;3462:25;3454:33;;3579:6;3573:3;3568;3564:13;3561:25;3558:2;;;3629:3;3624;3620:13;3612:6;3605:29;3558:2;3678;3672:4;3668:13;3661:20;;3189:502;;3751:165;3765:2;3758:3;:9;3751:165;;3840:3;3834:10;3828:4;3821:24;3880:2;3872:10;;;;3903:2;3896:9;;;;3776:2;3769:9;;;;3751:165;;;3958:9;3990:1;3983:3;3978:2;:8;3970:3;:17;:21;3958:33;;4059:4;4055:9;4049:3;4043:10;4039:26;4111:4;4104;4098:11;4094:22;4155:7;4145:8;4142:21;4136:4;4129:35;4010:164;;4191:3;4184:10;;;;;2875:1326;;;;;;:::o;2312:390:6:-;2394:7;2403:4;2536:10;2513:19;2528:3;2513;:14;;:19;;;;:::i;:::-;:33;;;2509:67;;2564:3;2570:5;2548:28;;;;;;;;;2509:67;2620:2;2614:3;:8;2610:42;;;2640:3;2646:5;2624:28;;;;;;;;;2610:42;2669:26;2682:3;2693:1;2687:3;:7;2669:12;:26::i;:::-;2662:33;;;;2312:390;;;;;;;:::o;535:367:10:-;609:4;625:8;636:6;625:17;;652:215;659:4;652:215;;;692:4;:11;686:3;:17;679:25;;;;718:13;734:19;749:3;734:4;:14;;:19;;;;:::i;:::-;718:35;;;;785:1;774:8;:12;767:19;;;;816:1;804:8;:13;800:57;;;837:5;;;800:57;652:215;;;;889:6;883:3;:12;876:19;;;535:367;;;;:::o;5697:223:8:-;5769:10;5810:4;:11;5805:1;5799:3;:7;:22;;5791:31;;;;;;5897:6;5890:3;5886:1;5880:4;5876:12;5872:22;5866:29;5862:42;5855:49;;5841:73;;;;:::o;6164:227::-;6236:10;6277:4;:11;6272:1;6266:3;:7;:22;;6258:31;;;;;;6364:10;6357:3;6353:1;6347:4;6343:12;6339:22;6333:29;6329:46;6322:53;;6308:77;;;;:::o;2035:134:5:-;2085:4;2109:1;2105;:5;2101:44;;;2133:1;2126:8;;;;2101:44;2161:1;2154:8;;2035:134;;;;;:::o;1862:167::-;1935:19;1957:3;:7;;;1935:29;;1974:19;1979:3;1984:8;1974:4;:19::i;:::-;;2003;2010:3;2015:6;2003;:19::i;:::-;;1862:167;;;:::o;2708:639:6:-;2781:7;2790:4;2829:2;2823:3;2810;:10;:16;:21;2806:55;;;2849:3;2855:5;2833:28;;;;;;;;;2806:55;2871:8;2882:1;2871:12;;2898:6;2907:3;2898:12;;2893:411;2922:2;2916:3;:8;2912:1;:12;2893:411;;;2953:1;2945:9;;;;;2968:6;2977:16;2991:1;2977:3;:13;;:16;;;;:::i;:::-;2968:25;;;;3016:2;3011:1;:7;;:17;;;;;3026:2;3022:1;:6;3011:17;3007:287;;;3059:2;3055:1;:6;3048:13;;;;3007:287;;;3091:2;3086:1;:7;;:17;;;;;3101:2;3097:1;:6;3086:17;3082:212;;;3134:2;3130:1;:6;3123:13;;;;3082:212;;;3166:2;3161:1;:7;;:18;;;;;3176:3;3172:1;:7;3161:18;3157:137;;;3210:2;3206:1;:6;3199:13;;;;3157:137;;;3267:3;3273:5;3251:28;;;;;;;;;;;;3157:137;3082:212;3007:287;2893:411;2926:3;;;;;;;2893:411;;;;3329:3;3335:4;3313:27;;;;;;;;2708:639;;;;;;:::o;284:2213:7:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@ensdomains/ens/contracts/ENSRegistry.sol\";\nimport \"@ensdomains/dnssec-oracle/contracts/DNSSEC.sol\";\nimport \"./DNSClaimChecker.sol\";\n\n/**\n * @dev An ENS registrar that allows the owner of a DNS name to claim the\n *      corresponding name in ENS.\n */\ncontract DNSRegistrar {\n\n    DNSSEC public oracle;\n    ENS public ens;\n\n    bytes4 constant private INTERFACE_META_ID = bytes4(keccak256(\"supportsInterface(bytes4)\"));\n    bytes4 constant private DNSSEC_CLAIM_ID = bytes4(\n        keccak256(\"claim(bytes,bytes)\") ^\n        keccak256(\"proveAndClaim(bytes,bytes,bytes)\") ^\n        keccak256(\"oracle()\")\n    );\n\n    event Claim(bytes32 indexed node, address indexed owner, bytes dnsname);\n\n    constructor(DNSSEC _dnssec, ENS _ens) public {\n        oracle = _dnssec;\n        ens = _ens;\n    }\n\n    /**\n     * @dev Claims a name by proving ownership of its DNS equivalent.\n     * @param name The name to claim, in DNS wire format.\n     * @param proof A DNS RRSet proving ownership of the name. Must be verified\n     *        in the DNSSEC oracle before calling. This RRSET must contain a TXT\n     *        record for '_ens.' + name, with the value 'a=0x...'. Ownership of\n     *        the name will be transferred to the address specified in the TXT\n     *        record.\n     */\n    function claim(bytes memory name, bytes memory proof) public {\n        address addr;\n        (addr,) = DNSClaimChecker.getOwnerAddress(oracle, name, proof);\n\n        bytes32 labelHash;\n        bytes32 rootNode;\n        (labelHash, rootNode) = DNSClaimChecker.getLabels(name);\n\n        ens.setSubnodeOwner(rootNode, labelHash, addr);\n        emit Claim(keccak256(abi.encodePacked(rootNode, labelHash)), addr, name);\n    }\n\n    /**\n     * @dev Submits proofs to the DNSSEC oracle, then claims a name using those proofs.\n     * @param name The name to claim, in DNS wire format.\n     * @param input The data to be passed to the Oracle's `submitProofs` function. The last\n     *        proof must be the TXT record required by the registrar.\n     * @param proof The proof record for the first element in input.\n     */\n    function proveAndClaim(bytes memory name, bytes memory input, bytes memory proof) public {\n        proof = oracle.submitRRSets(input, proof);\n        claim(name, proof);\n    }\n\n    function supportsInterface(bytes4 interfaceID) external pure returns (bool) {\n        return interfaceID == INTERFACE_META_ID ||\n               interfaceID == DNSSEC_CLAIM_ID;\n    }\n}\n",
  "sourcePath": "@ensdomains/dnsregistrar/contracts/DNSRegistrar.sol",
  "ast": {
    "absolutePath": "@ensdomains/dnsregistrar/contracts/DNSRegistrar.sol",
    "exportedSymbols": {
      "DNSRegistrar": [
        1140
      ]
    },
    "id": 1141,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 991,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "@ensdomains/ens/contracts/ENSRegistry.sol",
        "file": "@ensdomains/ens/contracts/ENSRegistry.sol",
        "id": 992,
        "nodeType": "ImportDirective",
        "scope": 1141,
        "sourceUnit": 3387,
        "src": "25:51:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/dnssec-oracle/contracts/DNSSEC.sol",
        "file": "@ensdomains/dnssec-oracle/contracts/DNSSEC.sol",
        "id": 993,
        "nodeType": "ImportDirective",
        "scope": 1141,
        "sourceUnit": 1935,
        "src": "77:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/dnsregistrar/contracts/DNSClaimChecker.sol",
        "file": "./DNSClaimChecker.sol",
        "id": 994,
        "nodeType": "ImportDirective",
        "scope": 1141,
        "sourceUnit": 990,
        "src": "134:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@dev An ENS registrar that allows the owner of a DNS name to claim the\n     corresponding name in ENS.",
        "fullyImplemented": true,
        "id": 1140,
        "linearizedBaseContracts": [
          1140
        ],
        "name": "DNSRegistrar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 996,
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "313:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DNSSEC_$1934",
              "typeString": "contract DNSSEC"
            },
            "typeName": {
              "contractScope": null,
              "id": 995,
              "name": "DNSSEC",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1934,
              "src": "313:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DNSSEC_$1934",
                "typeString": "contract DNSSEC"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 998,
            "name": "ens",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "339:14:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ENS_$2992",
              "typeString": "contract ENS"
            },
            "typeName": {
              "contractScope": null,
              "id": 997,
              "name": "ENS",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2992,
              "src": "339:3:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ENS_$2992",
                "typeString": "contract ENS"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1005,
            "name": "INTERFACE_META_ID",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "360:90:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 999,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "360:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "737570706f727473496e746572666163652862797465733429",
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "421:27:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
                        "typeString": "literal_string \"supportsInterface(bytes4)\""
                      },
                      "value": "supportsInterface(bytes4)"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
                        "typeString": "literal_string \"supportsInterface(bytes4)\""
                      }
                    ],
                    "id": 1001,
                    "name": "keccak256",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12113,
                    "src": "411:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                      "typeString": "function (bytes memory) pure returns (bytes32)"
                    }
                  },
                  "id": 1003,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "411:38:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                ],
                "id": 1000,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "404:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes4_$",
                  "typeString": "type(bytes4)"
                },
                "typeName": "bytes4"
              },
              "id": 1004,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "404:46:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1020,
            "name": "DNSSEC_CLAIM_ID",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "456:183:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1006,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "456:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "id": 1018,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "636c61696d2862797465732c627974657329",
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "524:20:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_be27b22c9acdad36ca1f0f94c9fd0d70d9f9852f6e2a5bfda557066792871970",
                            "typeString": "literal_string \"claim(bytes,bytes)\""
                          },
                          "value": "claim(bytes,bytes)"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_be27b22c9acdad36ca1f0f94c9fd0d70d9f9852f6e2a5bfda557066792871970",
                            "typeString": "literal_string \"claim(bytes,bytes)\""
                          }
                        ],
                        "id": 1008,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12113,
                        "src": "514:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "514:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "^",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "70726f7665416e64436c61696d2862797465732c62797465732c627974657329",
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "566:34:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d94585bdbcfe8f813f622f992acac91edb949402317ea853110ee88dff862633",
                            "typeString": "literal_string \"proveAndClaim(bytes,bytes,bytes)\""
                          },
                          "value": "proveAndClaim(bytes,bytes,bytes)"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d94585bdbcfe8f813f622f992acac91edb949402317ea853110ee88dff862633",
                            "typeString": "literal_string \"proveAndClaim(bytes,bytes,bytes)\""
                          }
                        ],
                        "id": 1011,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12113,
                        "src": "556:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "556:45:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "514:87:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "^",
                  "rightExpression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "6f7261636c652829",
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "622:10:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7dc0d1d053709daf7666fa92d95a4a378b3697fa925497d6f41c4277db580555",
                          "typeString": "literal_string \"oracle()\""
                        },
                        "value": "oracle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7dc0d1d053709daf7666fa92d95a4a378b3697fa925497d6f41c4277db580555",
                          "typeString": "literal_string \"oracle()\""
                        }
                      ],
                      "id": 1015,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12113,
                      "src": "612:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "612:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "src": "514:119:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                ],
                "id": 1007,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "498:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes4_$",
                  "typeString": "type(bytes4)"
                },
                "typeName": "bytes4"
              },
              "id": 1019,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "498:141:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1028,
            "name": "Claim",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1022,
                  "indexed": true,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 1028,
                  "src": "658:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1024,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1028,
                  "src": "680:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1026,
                  "indexed": false,
                  "name": "dnsname",
                  "nodeType": "VariableDeclaration",
                  "scope": 1028,
                  "src": "703:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "657:60:7"
            },
            "src": "646:72:7"
          },
          {
            "body": {
              "id": 1043,
              "nodeType": "Block",
              "src": "769:53:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1035,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "779:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DNSSEC_$1934",
                        "typeString": "contract DNSSEC"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1036,
                      "name": "_dnssec",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "788:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DNSSEC_$1934",
                        "typeString": "contract DNSSEC"
                      }
                    },
                    "src": "779:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DNSSEC_$1934",
                      "typeString": "contract DNSSEC"
                    }
                  },
                  "id": 1038,
                  "nodeType": "ExpressionStatement",
                  "src": "779:16:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1039,
                      "name": "ens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "805:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ENS_$2992",
                        "typeString": "contract ENS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1040,
                      "name": "_ens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "811:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ENS_$2992",
                        "typeString": "contract ENS"
                      }
                    },
                    "src": "805:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$2992",
                      "typeString": "contract ENS"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "805:10:7"
                }
              ]
            },
            "documentation": null,
            "id": 1044,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1030,
                  "name": "_dnssec",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "736:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DNSSEC_$1934",
                    "typeString": "contract DNSSEC"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1029,
                    "name": "DNSSEC",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1934,
                    "src": "736:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DNSSEC_$1934",
                      "typeString": "contract DNSSEC"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1032,
                  "name": "_ens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "752:8:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ENS_$2992",
                    "typeString": "contract ENS"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1031,
                    "name": "ENS",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2992,
                    "src": "752:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$2992",
                      "typeString": "contract ENS"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "735:26:7"
            },
            "returnParameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "769:0:7"
            },
            "scope": 1140,
            "src": "724:98:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "1375:359:7",
              "statements": [
                {
                  "assignments": [
                    1052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1052,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 1099,
                      "src": "1385:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1051,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1385:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1053,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1385:12:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 1054,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1052,
                          "src": "1408:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        null
                      ],
                      "id": 1055,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1407:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$__$",
                        "typeString": "tuple(address,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1058,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 996,
                          "src": "1449:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DNSSEC_$1934",
                            "typeString": "contract DNSSEC"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1059,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1046,
                          "src": "1457:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1060,
                          "name": "proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "1463:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DNSSEC_$1934",
                            "typeString": "contract DNSSEC"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1056,
                          "name": "DNSClaimChecker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "1417:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DNSClaimChecker_$989_$",
                            "typeString": "type(library DNSClaimChecker)"
                          }
                        },
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getOwnerAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 771,
                        "src": "1417:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_DNSSEC_$1934_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_address_$_t_bool_$",
                          "typeString": "function (contract DNSSEC,bytes memory,bytes memory) view returns (address,bool)"
                        }
                      },
                      "id": 1061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1417:52:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "src": "1407:62:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:62:7"
                },
                {
                  "assignments": [
                    1065
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1065,
                      "name": "labelHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 1099,
                      "src": "1480:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1064,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1480:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1066,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1480:17:7"
                },
                {
                  "assignments": [
                    1068
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1068,
                      "name": "rootNode",
                      "nodeType": "VariableDeclaration",
                      "scope": 1099,
                      "src": "1507:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1067,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1507:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1069,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1507:16:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 1070,
                          "name": "labelHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "1534:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1071,
                          "name": "rootNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1068,
                          "src": "1545:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1072,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1533:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1075,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1046,
                          "src": "1583:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1073,
                          "name": "DNSClaimChecker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "1557:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DNSClaimChecker_$989_$",
                            "typeString": "type(library DNSClaimChecker)"
                          }
                        },
                        "id": 1074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getLabels",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 629,
                        "src": "1557:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$",
                          "typeString": "function (bytes memory) view returns (bytes32,bytes32)"
                        }
                      },
                      "id": 1076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1557:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "src": "1533:55:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "1533:55:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1082,
                        "name": "rootNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "1619:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1083,
                        "name": "labelHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "1629:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1084,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "1640:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1079,
                        "name": "ens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "1599:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$2992",
                          "typeString": "contract ENS"
                        }
                      },
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSubnodeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2926,
                      "src": "1599:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32,address) external returns (bytes32)"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1599:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:46:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1091,
                                "name": "rootNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1068,
                                "src": "1693:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1092,
                                "name": "labelHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1065,
                                "src": "1703:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1089,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12106,
                                "src": "1676:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 1090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1676:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 1093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1676:37:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1088,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12113,
                          "src": "1666:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1666:48:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1095,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "1716:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1096,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "1722:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1087,
                      "name": "Claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "1660:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,bytes memory)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1660:67:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "EmitStatement",
                  "src": "1655:72:7"
                }
              ]
            },
            "documentation": "@dev Claims a name by proving ownership of its DNS equivalent.\n@param name The name to claim, in DNS wire format.\n@param proof A DNS RRSet proving ownership of the name. Must be verified\n       in the DNSSEC oracle before calling. This RRSET must contain a TXT\n       record for '_ens.' + name, with the value 'a=0x...'. Ownership of\n       the name will be transferred to the address specified in the TXT\n       record.",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1046,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "1329:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1048,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "1348:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1328:39:7"
            },
            "returnParameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1375:0:7"
            },
            "scope": 1140,
            "src": "1314:420:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1122,
              "nodeType": "Block",
              "src": "2222:86:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1109,
                      "name": "proof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1106,
                      "src": "2232:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1112,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1104,
                          "src": "2260:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1113,
                          "name": "proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1106,
                          "src": "2267:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1110,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 996,
                          "src": "2240:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DNSSEC_$1934",
                            "typeString": "contract DNSSEC"
                          }
                        },
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "submitRRSets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1896,
                        "src": "2240:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory,bytes memory) external returns (bytes memory)"
                        }
                      },
                      "id": 1114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2240:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2232:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "2232:41:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1118,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1102,
                        "src": "2289:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1119,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1106,
                        "src": "2295:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1117,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "2283:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2283:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1121,
                  "nodeType": "ExpressionStatement",
                  "src": "2283:18:7"
                }
              ]
            },
            "documentation": "@dev Submits proofs to the DNSSEC oracle, then claims a name using those proofs.\n@param name The name to claim, in DNS wire format.\n@param input The data to be passed to the Oracle's `submitProofs` function. The last\n       proof must be the TXT record required by the registrar.\n@param proof The proof record for the first element in input.",
            "id": 1123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proveAndClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "2156:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1104,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "2175:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1106,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "2195:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2155:59:7"
            },
            "returnParameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2222:0:7"
            },
            "scope": 1140,
            "src": "2133:175:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1138,
              "nodeType": "Block",
              "src": "2390:105:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1130,
                        "name": "interfaceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "2407:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1131,
                        "name": "INTERFACE_META_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "2422:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2407:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1133,
                        "name": "interfaceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "2458:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1134,
                        "name": "DNSSEC_CLAIM_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "2473:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2458:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2407:81:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1129,
                  "id": 1137,
                  "nodeType": "Return",
                  "src": "2400:88:7"
                }
              ]
            },
            "documentation": null,
            "id": 1139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1125,
                  "name": "interfaceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2341:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2341:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2340:20:7"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2384:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2384:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2383:6:7"
            },
            "scope": 1140,
            "src": "2314:181:7",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1141,
        "src": "284:2213:7"
      }
    ],
    "src": "0:2498:7"
  },
  "legacyAST": {
    "absolutePath": "@ensdomains/dnsregistrar/contracts/DNSRegistrar.sol",
    "exportedSymbols": {
      "DNSRegistrar": [
        1140
      ]
    },
    "id": 1141,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 991,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "@ensdomains/ens/contracts/ENSRegistry.sol",
        "file": "@ensdomains/ens/contracts/ENSRegistry.sol",
        "id": 992,
        "nodeType": "ImportDirective",
        "scope": 1141,
        "sourceUnit": 3387,
        "src": "25:51:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/dnssec-oracle/contracts/DNSSEC.sol",
        "file": "@ensdomains/dnssec-oracle/contracts/DNSSEC.sol",
        "id": 993,
        "nodeType": "ImportDirective",
        "scope": 1141,
        "sourceUnit": 1935,
        "src": "77:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/dnsregistrar/contracts/DNSClaimChecker.sol",
        "file": "./DNSClaimChecker.sol",
        "id": 994,
        "nodeType": "ImportDirective",
        "scope": 1141,
        "sourceUnit": 990,
        "src": "134:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@dev An ENS registrar that allows the owner of a DNS name to claim the\n     corresponding name in ENS.",
        "fullyImplemented": true,
        "id": 1140,
        "linearizedBaseContracts": [
          1140
        ],
        "name": "DNSRegistrar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 996,
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "313:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DNSSEC_$1934",
              "typeString": "contract DNSSEC"
            },
            "typeName": {
              "contractScope": null,
              "id": 995,
              "name": "DNSSEC",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1934,
              "src": "313:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DNSSEC_$1934",
                "typeString": "contract DNSSEC"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 998,
            "name": "ens",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "339:14:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ENS_$2992",
              "typeString": "contract ENS"
            },
            "typeName": {
              "contractScope": null,
              "id": 997,
              "name": "ENS",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2992,
              "src": "339:3:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ENS_$2992",
                "typeString": "contract ENS"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1005,
            "name": "INTERFACE_META_ID",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "360:90:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 999,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "360:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "737570706f727473496e746572666163652862797465733429",
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "421:27:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
                        "typeString": "literal_string \"supportsInterface(bytes4)\""
                      },
                      "value": "supportsInterface(bytes4)"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
                        "typeString": "literal_string \"supportsInterface(bytes4)\""
                      }
                    ],
                    "id": 1001,
                    "name": "keccak256",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12113,
                    "src": "411:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                      "typeString": "function (bytes memory) pure returns (bytes32)"
                    }
                  },
                  "id": 1003,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "411:38:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                ],
                "id": 1000,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "404:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes4_$",
                  "typeString": "type(bytes4)"
                },
                "typeName": "bytes4"
              },
              "id": 1004,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "404:46:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1020,
            "name": "DNSSEC_CLAIM_ID",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "456:183:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1006,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "456:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "id": 1018,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "636c61696d2862797465732c627974657329",
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "524:20:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_be27b22c9acdad36ca1f0f94c9fd0d70d9f9852f6e2a5bfda557066792871970",
                            "typeString": "literal_string \"claim(bytes,bytes)\""
                          },
                          "value": "claim(bytes,bytes)"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_be27b22c9acdad36ca1f0f94c9fd0d70d9f9852f6e2a5bfda557066792871970",
                            "typeString": "literal_string \"claim(bytes,bytes)\""
                          }
                        ],
                        "id": 1008,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12113,
                        "src": "514:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "514:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "^",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "70726f7665416e64436c61696d2862797465732c62797465732c627974657329",
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "566:34:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d94585bdbcfe8f813f622f992acac91edb949402317ea853110ee88dff862633",
                            "typeString": "literal_string \"proveAndClaim(bytes,bytes,bytes)\""
                          },
                          "value": "proveAndClaim(bytes,bytes,bytes)"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d94585bdbcfe8f813f622f992acac91edb949402317ea853110ee88dff862633",
                            "typeString": "literal_string \"proveAndClaim(bytes,bytes,bytes)\""
                          }
                        ],
                        "id": 1011,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12113,
                        "src": "556:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "556:45:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "514:87:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "^",
                  "rightExpression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "6f7261636c652829",
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "622:10:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7dc0d1d053709daf7666fa92d95a4a378b3697fa925497d6f41c4277db580555",
                          "typeString": "literal_string \"oracle()\""
                        },
                        "value": "oracle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7dc0d1d053709daf7666fa92d95a4a378b3697fa925497d6f41c4277db580555",
                          "typeString": "literal_string \"oracle()\""
                        }
                      ],
                      "id": 1015,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12113,
                      "src": "612:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "612:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "src": "514:119:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                ],
                "id": 1007,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "498:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes4_$",
                  "typeString": "type(bytes4)"
                },
                "typeName": "bytes4"
              },
              "id": 1019,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "498:141:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1028,
            "name": "Claim",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1022,
                  "indexed": true,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 1028,
                  "src": "658:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1024,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1028,
                  "src": "680:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1026,
                  "indexed": false,
                  "name": "dnsname",
                  "nodeType": "VariableDeclaration",
                  "scope": 1028,
                  "src": "703:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "657:60:7"
            },
            "src": "646:72:7"
          },
          {
            "body": {
              "id": 1043,
              "nodeType": "Block",
              "src": "769:53:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1035,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "779:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DNSSEC_$1934",
                        "typeString": "contract DNSSEC"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1036,
                      "name": "_dnssec",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "788:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DNSSEC_$1934",
                        "typeString": "contract DNSSEC"
                      }
                    },
                    "src": "779:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DNSSEC_$1934",
                      "typeString": "contract DNSSEC"
                    }
                  },
                  "id": 1038,
                  "nodeType": "ExpressionStatement",
                  "src": "779:16:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1039,
                      "name": "ens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "805:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ENS_$2992",
                        "typeString": "contract ENS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1040,
                      "name": "_ens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "811:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ENS_$2992",
                        "typeString": "contract ENS"
                      }
                    },
                    "src": "805:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$2992",
                      "typeString": "contract ENS"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "805:10:7"
                }
              ]
            },
            "documentation": null,
            "id": 1044,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1030,
                  "name": "_dnssec",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "736:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DNSSEC_$1934",
                    "typeString": "contract DNSSEC"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1029,
                    "name": "DNSSEC",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1934,
                    "src": "736:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DNSSEC_$1934",
                      "typeString": "contract DNSSEC"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1032,
                  "name": "_ens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "752:8:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ENS_$2992",
                    "typeString": "contract ENS"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1031,
                    "name": "ENS",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2992,
                    "src": "752:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$2992",
                      "typeString": "contract ENS"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "735:26:7"
            },
            "returnParameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "769:0:7"
            },
            "scope": 1140,
            "src": "724:98:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "1375:359:7",
              "statements": [
                {
                  "assignments": [
                    1052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1052,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 1099,
                      "src": "1385:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1051,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1385:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1053,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1385:12:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 1054,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1052,
                          "src": "1408:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        null
                      ],
                      "id": 1055,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1407:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$__$",
                        "typeString": "tuple(address,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1058,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 996,
                          "src": "1449:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DNSSEC_$1934",
                            "typeString": "contract DNSSEC"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1059,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1046,
                          "src": "1457:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1060,
                          "name": "proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "1463:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DNSSEC_$1934",
                            "typeString": "contract DNSSEC"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1056,
                          "name": "DNSClaimChecker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "1417:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DNSClaimChecker_$989_$",
                            "typeString": "type(library DNSClaimChecker)"
                          }
                        },
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getOwnerAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 771,
                        "src": "1417:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_DNSSEC_$1934_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_address_$_t_bool_$",
                          "typeString": "function (contract DNSSEC,bytes memory,bytes memory) view returns (address,bool)"
                        }
                      },
                      "id": 1061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1417:52:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "src": "1407:62:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:62:7"
                },
                {
                  "assignments": [
                    1065
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1065,
                      "name": "labelHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 1099,
                      "src": "1480:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1064,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1480:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1066,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1480:17:7"
                },
                {
                  "assignments": [
                    1068
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1068,
                      "name": "rootNode",
                      "nodeType": "VariableDeclaration",
                      "scope": 1099,
                      "src": "1507:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1067,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1507:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1069,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1507:16:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 1070,
                          "name": "labelHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "1534:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1071,
                          "name": "rootNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1068,
                          "src": "1545:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1072,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1533:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1075,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1046,
                          "src": "1583:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1073,
                          "name": "DNSClaimChecker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "1557:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DNSClaimChecker_$989_$",
                            "typeString": "type(library DNSClaimChecker)"
                          }
                        },
                        "id": 1074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getLabels",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 629,
                        "src": "1557:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$",
                          "typeString": "function (bytes memory) view returns (bytes32,bytes32)"
                        }
                      },
                      "id": 1076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1557:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "src": "1533:55:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "1533:55:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1082,
                        "name": "rootNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "1619:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1083,
                        "name": "labelHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "1629:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1084,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "1640:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1079,
                        "name": "ens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "1599:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$2992",
                          "typeString": "contract ENS"
                        }
                      },
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSubnodeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2926,
                      "src": "1599:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32,address) external returns (bytes32)"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1599:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:46:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1091,
                                "name": "rootNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1068,
                                "src": "1693:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1092,
                                "name": "labelHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1065,
                                "src": "1703:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1089,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12106,
                                "src": "1676:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 1090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1676:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 1093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1676:37:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1088,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12113,
                          "src": "1666:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1666:48:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1095,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "1716:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1096,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "1722:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1087,
                      "name": "Claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "1660:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,bytes memory)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1660:67:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "EmitStatement",
                  "src": "1655:72:7"
                }
              ]
            },
            "documentation": "@dev Claims a name by proving ownership of its DNS equivalent.\n@param name The name to claim, in DNS wire format.\n@param proof A DNS RRSet proving ownership of the name. Must be verified\n       in the DNSSEC oracle before calling. This RRSET must contain a TXT\n       record for '_ens.' + name, with the value 'a=0x...'. Ownership of\n       the name will be transferred to the address specified in the TXT\n       record.",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1046,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "1329:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1048,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "1348:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1328:39:7"
            },
            "returnParameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1375:0:7"
            },
            "scope": 1140,
            "src": "1314:420:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1122,
              "nodeType": "Block",
              "src": "2222:86:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1109,
                      "name": "proof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1106,
                      "src": "2232:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1112,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1104,
                          "src": "2260:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1113,
                          "name": "proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1106,
                          "src": "2267:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1110,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 996,
                          "src": "2240:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DNSSEC_$1934",
                            "typeString": "contract DNSSEC"
                          }
                        },
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "submitRRSets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1896,
                        "src": "2240:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory,bytes memory) external returns (bytes memory)"
                        }
                      },
                      "id": 1114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2240:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2232:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "2232:41:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1118,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1102,
                        "src": "2289:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1119,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1106,
                        "src": "2295:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1117,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "2283:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2283:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1121,
                  "nodeType": "ExpressionStatement",
                  "src": "2283:18:7"
                }
              ]
            },
            "documentation": "@dev Submits proofs to the DNSSEC oracle, then claims a name using those proofs.\n@param name The name to claim, in DNS wire format.\n@param input The data to be passed to the Oracle's `submitProofs` function. The last\n       proof must be the TXT record required by the registrar.\n@param proof The proof record for the first element in input.",
            "id": 1123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proveAndClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "2156:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1104,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "2175:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1106,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "2195:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2155:59:7"
            },
            "returnParameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2222:0:7"
            },
            "scope": 1140,
            "src": "2133:175:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1138,
              "nodeType": "Block",
              "src": "2390:105:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1130,
                        "name": "interfaceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "2407:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1131,
                        "name": "INTERFACE_META_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "2422:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2407:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1133,
                        "name": "interfaceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "2458:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1134,
                        "name": "DNSSEC_CLAIM_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "2473:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2458:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2407:81:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1129,
                  "id": 1137,
                  "nodeType": "Return",
                  "src": "2400:88:7"
                }
              ]
            },
            "documentation": null,
            "id": 1139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1125,
                  "name": "interfaceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2341:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2341:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2340:20:7"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2384:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2384:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2383:6:7"
            },
            "scope": 1140,
            "src": "2314:181:7",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1141,
        "src": "284:2213:7"
      }
    ],
    "src": "0:2498:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0xa2e66ce20e6fb2c4f61339c364ad79f15160cf5307230c8bc4d628adbca2ba39": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "node",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "dnsname",
              "type": "bytes"
            }
          ],
          "name": "Claim",
          "type": "event",
          "signature": "0xa2e66ce20e6fb2c4f61339c364ad79f15160cf5307230c8bc4d628adbca2ba39"
        }
      },
      "links": {},
      "address": "0xa2F428617a523837d4adC81C67a296d42FD95e86",
      "transactionHash": "0x44059f1e622b298ee8c87a3ef8a7ab5bc70e0c4102b2bc6ab8d3a07bab9d70a4"
    },
    "3": {
      "events": {
        "0xa2e66ce20e6fb2c4f61339c364ad79f15160cf5307230c8bc4d628adbca2ba39": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "node",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "dnsname",
              "type": "bytes"
            }
          ],
          "name": "Claim",
          "type": "event",
          "signature": "0xa2e66ce20e6fb2c4f61339c364ad79f15160cf5307230c8bc4d628adbca2ba39"
        }
      },
      "links": {},
      "address": "0x8DE4864c38f9CE3A16c17f9bAB0D5F892F9fF1d0",
      "transactionHash": "0xb2f15d2d8d348e575a284c9438794dce5099688e1c383ba43e92599609ed0d80"
    },
    "5": {
      "events": {
        "0xa2e66ce20e6fb2c4f61339c364ad79f15160cf5307230c8bc4d628adbca2ba39": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "node",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "dnsname",
              "type": "bytes"
            }
          ],
          "name": "Claim",
          "type": "event",
          "signature": "0xa2e66ce20e6fb2c4f61339c364ad79f15160cf5307230c8bc4d628adbca2ba39"
        }
      },
      "links": {},
      "address": "0x8DE4864c38f9CE3A16c17f9bAB0D5F892F9fF1d0",
      "transactionHash": "0xbf3589ea8995eaa6edde0c4db15c1e0ed21569efb6d65fb71c4aadab3878e5d1"
    }
  },
  "schemaVersion": "3.0.22",
  "updatedAt": "2020-01-30T01:17:29.560Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "An ENS registrar that allows the owner of a DNS name to claim the     corresponding name in ENS.",
    "methods": {
      "claim(bytes,bytes)": {
        "details": "Claims a name by proving ownership of its DNS equivalent.",
        "params": {
          "name": "The name to claim, in DNS wire format.",
          "proof": "A DNS RRSet proving ownership of the name. Must be verified       in the DNSSEC oracle before calling. This RRSET must contain a TXT       record for '_ens.' + name, with the value 'a=0x...'. Ownership of       the name will be transferred to the address specified in the TXT       record."
        }
      },
      "proveAndClaim(bytes,bytes,bytes)": {
        "details": "Submits proofs to the DNSSEC oracle, then claims a name using those proofs.",
        "params": {
          "input": "The data to be passed to the Oracle's `submitProofs` function. The last       proof must be the TXT record required by the registrar.",
          "name": "The name to claim, in DNS wire format.",
          "proof": "The proof record for the first element in input."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}